When you want to create a remote repository rather than keeping all your work local?

Q. Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

A: I want to always pull changes manually because I can keep my changes or rather more precisely in Git way as commits so that I don't need to rely on automatically stay up-to-date with my remote repository.

Q. Describe the differences between forks, clones, and branches. When would you use one instead of another?

A: Fork is a GitHub specific term and can be used on GitHub only. Cloning is very similar to forking and can be done from GitHub to local directory using the URL. Branching is the way to work on different parts of a repository at one time.

Q. What is the benefit of having a copy of the last known state of the remote stored locally?
A: It is always good to have a copy of last known state of remote stored locally because if someone changes the contents so as to avoid conflicts between the same version of the file.

Q. How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
A: I can collaborate without using Git or GitHub by emailing or keeping a shared folder with Microsoft's OneDrive or Google Drive. But it would be lot more difficult using these to collaborate as it would get more worse as the length of code increases, so collaborating using Git and GitHub would be much more easier.

Q. When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
A: If I want to experiment with the features of my app I can do it with another branch or I can allow others to make changes to different branch instead of the master one. This approach allows others to send me pull requests and I can watch for their changes to merge their changes to master branch.